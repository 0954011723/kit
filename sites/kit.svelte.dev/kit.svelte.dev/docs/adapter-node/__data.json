{"type":"data","nodes":[null,{"type":"data","data":[{"sections":1},[2,17,35,71,101,110,125],{"title":3,"pages":4},"Getting started",[5,8,11,14],{"title":6,"path":7},"Introduction","\u002Fdocs\u002Fintroduction",{"title":9,"path":10},"Creating a project","\u002Fdocs\u002Fcreating-a-project",{"title":12,"path":13},"Project structure","\u002Fdocs\u002Fproject-structure",{"title":15,"path":16},"Web standards","\u002Fdocs\u002Fweb-standards",{"title":18,"pages":19},"Core concepts",[20,23,26,29,32],{"title":21,"path":22},"Routing","\u002Fdocs\u002Frouting",{"title":24,"path":25},"Loading data","\u002Fdocs\u002Fload",{"title":27,"path":28},"Form actions","\u002Fdocs\u002Fform-actions",{"title":30,"path":31},"Page options","\u002Fdocs\u002Fpage-options",{"title":33,"path":34},"State management","\u002Fdocs\u002Fstate-management",{"title":36,"pages":37},"Build and deploy",[38,41,44,47,50,53,56,59,62,65,68],{"title":39,"path":40},"Building your app","\u002Fdocs\u002Fbuilding-your-app",{"title":42,"path":43},"Adapters","\u002Fdocs\u002Fadapters",{"title":45,"path":46},"Zero-config deployments","\u002Fdocs\u002Fadapter-auto",{"title":48,"path":49},"Node servers","\u002Fdocs\u002Fadapter-node",{"title":51,"path":52},"Static site generation","\u002Fdocs\u002Fadapter-static",{"title":54,"path":55},"Single-page apps","\u002Fdocs\u002Fsingle-page-apps",{"title":57,"path":58},"Cloudflare Pages","\u002Fdocs\u002Fadapter-cloudflare",{"title":60,"path":61},"Cloudflare Workers","\u002Fdocs\u002Fadapter-cloudflare-workers",{"title":63,"path":64},"Netlify","\u002Fdocs\u002Fadapter-netlify",{"title":66,"path":67},"Vercel","\u002Fdocs\u002Fadapter-vercel",{"title":69,"path":70},"Writing adapters","\u002Fdocs\u002Fwriting-adapters",{"title":72,"pages":73},"Advanced",[74,77,80,83,86,89,92,95,98],{"title":75,"path":76},"Advanced routing","\u002Fdocs\u002Fadvanced-routing",{"title":78,"path":79},"Hooks","\u002Fdocs\u002Fhooks",{"title":81,"path":82},"Errors","\u002Fdocs\u002Ferrors",{"title":84,"path":85},"Link options","\u002Fdocs\u002Flink-options",{"title":87,"path":88},"Service workers","\u002Fdocs\u002Fservice-workers",{"title":90,"path":91},"Server-only modules","\u002Fdocs\u002Fserver-only-modules",{"title":93,"path":94},"Asset handling","\u002Fdocs\u002Fassets",{"title":96,"path":97},"Snapshots","\u002Fdocs\u002Fsnapshots",{"title":99,"path":100},"Packaging","\u002Fdocs\u002Fpackaging",{"title":102,"pages":103},"Best practices",[104,107],{"title":105,"path":106},"Accessibility","\u002Fdocs\u002Faccessibility",{"title":108,"path":109},"SEO","\u002Fdocs\u002Fseo",{"title":111,"pages":112},"Reference",[113,116,119,122],{"title":114,"path":115},"Configuration","\u002Fdocs\u002Fconfiguration",{"title":117,"path":118},"Command Line Interface","\u002Fdocs\u002Fcli",{"title":120,"path":121},"Modules","\u002Fdocs\u002Fmodules",{"title":123,"path":124},"Types","\u002Fdocs\u002Ftypes",{"title":126,"pages":127},"Appendix",[128,131,134,137],{"title":129,"path":130},"Integrations","\u002Fdocs\u002Fintegrations",{"title":132,"path":133},"Migrating from Sapper","\u002Fdocs\u002Fmigrating",{"title":135,"path":136},"Additional resources","\u002Fdocs\u002Fadditional-resources",{"title":138,"path":139},"Glossary","\u002Fdocs\u002Fglossary"],"uses":{}},{"type":"data","data":[{"page":1},{"file":2,"slug":3,"title":4,"content":5,"sections":6},"docs\u002F25-build-and-deploy\u002F40-adapter-node.md","adapter-node","Node servers","\u003Cp\u003ETo generate a standalone Node server, use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsveltejs\u002Fkit\u002Ftree\u002Fmaster\u002Fpackages\u002Fadapter-node\"\u003E\u003Ccode\u003Eadapter-node\u003C\u002Fcode\u003E\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"usage\"\u003EUsage\u003Ca href=\"#usage\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EInstall with \u003Ccode\u003Enpm i -D @sveltejs\u002Fadapter-node\u003C\u002Fcode\u003E, then add the adapter to your \u003Ccode\u003Esvelte.config.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block\"\u003E\u003Cspan class=\"filename\"\u003Esvelte.config.js\u003C\u002Fspan\u003E\u003Cpre class=\"shiki twoslash lsp\" style=\"background-color: var(--shiki-color-background); color: var(--shiki-color-text)\"\u003E\u003Cdiv class=\"language-id\"\u003Ets\u003C\u002Fdiv\u003E\u003Cdiv class='code-container'\u003E\u003Ccode\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eimport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003Cdata-lsp lsp='import adapter' \u003Eadapter\u003C\u002Fdata-lsp\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Efrom\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E\u003Cdata-err\u003E&apos;@sveltejs\u002Fadapter-node&apos;\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find module '@sveltejs\u002Fadapter-node' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2307\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find module '@sveltejs\u002Fadapter-node' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eexport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Edefault\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003Cdata-lsp lsp='(property) kit: {&amp;#10;    adapter: any;&amp;#10;}' \u003Ekit\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E    \u003Cdata-lsp lsp='(property) adapter: any' \u003Eadapter\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E\u003Cdata-lsp lsp='import adapter' \u003Eadapter\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E()\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  }\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E};\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2 id=\"deploying\"\u003EDeploying\u003Ca href=\"#deploying\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EFirst, build your app with \u003Ccode\u003Enpm run build\u003C\u002Fcode\u003E. This will create the production server in the output directory specified in the adapter options, defaulting to \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EYou will need the output directory, the project&#39;s \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E, and the production dependencies in \u003Ccode\u003Enode_modules\u003C\u002Fcode\u003E to run the application. Production dependencies can be generated by copying the \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E and \u003Ccode\u003Epackage-lock.json\u003C\u002Fcode\u003E and then running \u003Ccode\u003Enpm ci --omit dev\u003C\u002Fcode\u003E (you can skip this step if your app doesn&#39;t have any dependencies). You can then start your app with this command:\u003C\u002Fp\u003E\n\u003Cpre class='language-bash'\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Enode\u003C\u002Fspan\u003E build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EDevelopment dependencies will be bundled into your app using \u003Ca href=\"https:\u002F\u002Frollupjs.org\"\u003ERollup\u003C\u002Fa\u003E. To control whether a given package is bundled or externalised, place it in \u003Ccode\u003EdevDependencies\u003C\u002Fcode\u003E or \u003Ccode\u003Edependencies\u003C\u002Fcode\u003E respectively in your \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"environment-variables\"\u003EEnvironment variables\u003Ca href=\"#environment-variables\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EIn \u003Ccode\u003Edev\u003C\u002Fcode\u003E and \u003Ccode\u003Epreview\u003C\u002Fcode\u003E, SvelteKit will read environment variables from your \u003Ccode\u003E.env\u003C\u002Fcode\u003E file (or \u003Ccode\u003E.env.local\u003C\u002Fcode\u003E, or \u003Ccode\u003E.env.[mode]\u003C\u002Fcode\u003E, \u003Ca href=\"https:\u002F\u002Fvitejs.dev\u002Fguide\u002Fenv-and-mode.html#env-files\"\u003Eas determined by Vite\u003C\u002Fa\u003E.)\u003C\u002Fp\u003E\n\u003Cp\u003EIn production, \u003Ccode\u003E.env\u003C\u002Fcode\u003E files are \u003Cem\u003Enot\u003C\u002Fem\u003E automatically loaded. To do so, install \u003Ccode\u003Edotenv\u003C\u002Fcode\u003E in your project...\u003C\u002Fp\u003E\n\u003Cpre class='language-bash'\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Enpm\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Einstall\u003C\u002Fspan\u003E dotenv\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E...and invoke it before running the built app:\u003C\u002Fp\u003E\n\u003Cpre class=\"language-diff\"\u003E\u003Ccode\u003E\u003Cspan class=\"deleted\"\u003Enode build\n\u003C\u002Fspan\u003E\u003Cspan class=\"inserted\"\u003Enode -r dotenv\u002Fconfig build\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"environment-variables-port-and-host\"\u003E\u003Ccode\u003EPORT\u003C\u002Fcode\u003E and \u003Ccode\u003EHOST\u003C\u002Fcode\u003E\u003Ca href=\"#environment-variables-port-and-host\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EBy default, the server will accept connections on \u003Ccode\u003E0.0.0.0\u003C\u002Fcode\u003E using port 3000. These can be customised with the \u003Ccode\u003EPORT\u003C\u002Fcode\u003E and \u003Ccode\u003EHOST\u003C\u002Fcode\u003E environment variables:\u003C\u002Fp\u003E\n\u003Cpre class='language-'\u003E\u003Ccode\u003EHOST=127.0.0.1 PORT=4000 node build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"environment-variables-origin-protocol-header-and-host-header\"\u003E\u003Ccode\u003EORIGIN\u003C\u002Fcode\u003E, \u003Ccode\u003EPROTOCOL_HEADER\u003C\u002Fcode\u003E and \u003Ccode\u003EHOST_HEADER\u003C\u002Fcode\u003E\u003Ca href=\"#environment-variables-origin-protocol-header-and-host-header\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EHTTP doesn&#39;t give SvelteKit a reliable way to know the URL that is currently being requested. The simplest way to tell SvelteKit where the app is being served is to set the \u003Ccode\u003EORIGIN\u003C\u002Fcode\u003E environment variable:\u003C\u002Fp\u003E\n\u003Cpre class='language-'\u003E\u003Ccode\u003EORIGIN=https:\u002F\u002Fmy.site node build\n\n# or e.g. for local previewing and testing\nORIGIN=http:\u002F\u002Flocalhost:3000 node build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this, a request for the \u003Ccode\u003E\u002Fstuff\u003C\u002Fcode\u003E pathname will correctly resolve to \u003Ccode\u003Ehttps:\u002F\u002Fmy.site\u002Fstuff\u003C\u002Fcode\u003E. Alternatively, you can specify headers that tell SvelteKit about the request protocol and host, from which it can construct the origin URL:\u003C\u002Fp\u003E\n\u003Cpre class='language-'\u003E\u003Ccode\u003EPROTOCOL_HEADER=x-forwarded-proto HOST_HEADER=x-forwarded-host node build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FHTTP\u002FHeaders\u002FX-Forwarded-Proto\"\u003E\u003Ccode\u003Ex-forwarded-proto\u003C\u002Fcode\u003E\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FHTTP\u002FHeaders\u002FX-Forwarded-Host\"\u003E\u003Ccode\u003Ex-forwarded-host\u003C\u002Fcode\u003E\u003C\u002Fa\u003E are de facto standard headers that forward the original protocol and host if you&#39;re using a reverse proxy (think load balancers and CDNs). You should only set these variables if your server is behind a trusted reverse proxy; otherwise, it&#39;d be possible for clients to spoof these headers.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EIf \u003Ccode\u003Eadapter-node\u003C\u002Fcode\u003E can&#39;t correctly determine the URL of your deployment, you may experience this error when using \u003Ca href=\"form-actions\"\u003Eform actions\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ECross-site POST form submissions are forbidden\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"environment-variables-address-header-and-xff-depth\"\u003E\u003Ccode\u003EADDRESS_HEADER\u003C\u002Fcode\u003E and \u003Ccode\u003EXFF_DEPTH\u003C\u002Fcode\u003E\u003Ca href=\"#environment-variables-address-header-and-xff-depth\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThe \u003Ca href=\"types#public-types-requestevent\"\u003ERequestEvent\u003C\u002Fa\u003E object passed to hooks and endpoints includes an \u003Ccode\u003Eevent.getClientAddress()\u003C\u002Fcode\u003E function that returns the client&#39;s IP address. By default this is the connecting \u003Ccode\u003EremoteAddress\u003C\u002Fcode\u003E. If your server is behind one or more proxies (such as a load balancer), this value will contain the innermost proxy&#39;s IP address rather than the client&#39;s, so we need to specify an \u003Ccode\u003EADDRESS_HEADER\u003C\u002Fcode\u003E to read the address from:\u003C\u002Fp\u003E\n\u003Cpre class='language-'\u003E\u003Ccode\u003EADDRESS_HEADER=True-Client-IP node build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003EHeaders can easily be spoofed. As with \u003Ccode\u003EPROTOCOL_HEADER\u003C\u002Fcode\u003E and \u003Ccode\u003EHOST_HEADER\u003C\u002Fcode\u003E, you should \u003Ca href=\"https:\u002F\u002Fadam-p.ca\u002Fblog\u002F2022\u002F03\u002Fx-forwarded-for\u002F\"\u003Eknow what you&#39;re doing\u003C\u002Fa\u003E before setting these.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EIf the \u003Ccode\u003EADDRESS_HEADER\u003C\u002Fcode\u003E is \u003Ccode\u003EX-Forwarded-For\u003C\u002Fcode\u003E, the header value will contain a comma-separated list of IP addresses. The \u003Ccode\u003EXFF_DEPTH\u003C\u002Fcode\u003E environment variable should specify how many trusted proxies sit in front of your server. E.g. if there are three trusted proxies, proxy 3 will forward the addresses of the original connection and the first two proxies:\u003C\u002Fp\u003E\n\u003Cpre class='language-'\u003E\u003Ccode\u003E&lt;client address&gt;, &lt;proxy 1 address&gt;, &lt;proxy 2 address&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ESome guides will tell you to read the left-most address, but this leaves you \u003Ca href=\"https:\u002F\u002Fadam-p.ca\u002Fblog\u002F2022\u002F03\u002Fx-forwarded-for\u002F\"\u003Evulnerable to spoofing\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\u003Cpre class='language-'\u003E\u003Ccode\u003E&lt;spoofed address&gt;, &lt;client address&gt;, &lt;proxy 1 address&gt;, &lt;proxy 2 address&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe instead read from the \u003Cem\u003Eright\u003C\u002Fem\u003E, accounting for the number of trusted proxies. In this case, we would use \u003Ccode\u003EXFF_DEPTH=3\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EIf you need to read the left-most address instead (and don&#39;t care about spoofing) — for example, to offer a geolocation service, where it&#39;s more important for the IP address to be \u003Cem\u003Ereal\u003C\u002Fem\u003E than \u003Cem\u003Etrusted\u003C\u002Fem\u003E, you can do so by inspecting the \u003Ccode\u003Ex-forwarded-for\u003C\u002Fcode\u003E header within your app.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"environment-variables-body-size-limit\"\u003E\u003Ccode\u003EBODY_SIZE_LIMIT\u003C\u002Fcode\u003E\u003Ca href=\"#environment-variables-body-size-limit\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThe maximum request body size to accept in bytes including while streaming. Defaults to 512kb. You can disable this option with a value of 0 and implement a custom check in \u003Ca href=\"hooks#server-hooks-handle\"\u003E\u003Ccode\u003Ehandle\u003C\u002Fcode\u003E\u003C\u002Fa\u003E if you need something more advanced.\u003C\u002Fp\u003E\n\u003Ch2 id=\"options\"\u003EOptions\u003Ca href=\"#options\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EThe adapter can be configured with various options:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block\"\u003E\u003Cspan class=\"filename\"\u003Esvelte.config.js\u003C\u002Fspan\u003E\u003Cpre class=\"shiki twoslash lsp\" style=\"background-color: var(--shiki-color-background); color: var(--shiki-color-text)\"\u003E\u003Cdiv class=\"language-id\"\u003Ets\u003C\u002Fdiv\u003E\u003Cdiv class='code-container'\u003E\u003Ccode\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eimport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003Cdata-lsp lsp='import adapter' \u003Eadapter\u003C\u002Fdata-lsp\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Efrom\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E\u003Cdata-err\u003E&apos;@sveltejs\u002Fadapter-node&apos;\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find module '@sveltejs\u002Fadapter-node' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2307\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find module '@sveltejs\u002Fadapter-node' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eexport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Edefault\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003Cdata-lsp lsp='(property) kit: {&amp;#10;    adapter: any;&amp;#10;}' \u003Ekit\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E    \u003Cdata-lsp lsp='(property) adapter: any' \u003Eadapter\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E\u003Cdata-lsp lsp='import adapter' \u003Eadapter\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E({\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E      \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-comment)\"\u003E\u002F\u002F default options are shown\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E      \u003Cdata-lsp lsp='(property) out: string' \u003Eout\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;build&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E      \u003Cdata-lsp lsp='(property) precompress: boolean' \u003Eprecompress\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E      \u003Cdata-lsp lsp='(property) envPrefix: string' \u003EenvPrefix\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E      \u003Cdata-lsp lsp='(property) polyfill: boolean' \u003Epolyfill\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E    })\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  }\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E};\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch3 id=\"options-out\"\u003Eout\u003Ca href=\"#options-out\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThe directory to build the server to. It defaults to \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E — i.e. \u003Ccode\u003Enode build\u003C\u002Fcode\u003E would start the server locally after it has been created.\u003C\u002Fp\u003E\n\u003Ch3 id=\"options-precompress\"\u003Eprecompress\u003Ca href=\"#options-precompress\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EEnables precompressing using gzip and brotli for assets and prerendered pages. It defaults to \u003Ccode\u003Efalse\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"options-envprefix\"\u003EenvPrefix\u003Ca href=\"#options-envprefix\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIf you need to change the name of the environment variables used to configure the deployment (for example, to deconflict with environment variables you don&#39;t control), you can specify a prefix:\u003C\u002Fp\u003E\n\u003Cpre class=\"shiki twoslash lsp\" style=\"background-color: var(--shiki-color-background); color: var(--shiki-color-text)\"\u003E\u003Cdiv class=\"language-id\"\u003Ets\u003C\u002Fdiv\u003E\u003Cdiv class='code-container'\u003E\u003Ccode\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003EenvPrefix\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;MY_CUSTOM_&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fpre\u003E\u003Cpre class='language-undefined'\u003E\u003Ccode\u003EMY_CUSTOM_HOST=127.0.0.1 \\\nMY_CUSTOM_PORT=4000 \\\nMY_CUSTOM_ORIGIN=https:\u002F\u002Fmy.site \\\nnode build\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"options-polyfill\"\u003Epolyfill\u003Ca href=\"#options-polyfill\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EControls whether your build will load polyfills for missing modules. It defaults to \u003Ccode\u003Etrue\u003C\u002Fcode\u003E, and should only be disabled when using Node 18.11 or greater.\u003C\u002Fp\u003E\n\u003Ch2 id=\"custom-server\"\u003ECustom server\u003Ca href=\"#custom-server\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EThe adapter creates two files in your build directory — \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E and \u003Ccode\u003Ehandler.js\u003C\u002Fcode\u003E. Running \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E — e.g. \u003Ccode\u003Enode build\u003C\u002Fcode\u003E, if you use the default build directory — will start a server on the configured port.\u003C\u002Fp\u003E\n\u003Cp\u003EAlternatively, you can import the \u003Ccode\u003Ehandler.js\u003C\u002Fcode\u003E file, which exports a handler suitable for use with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fexpressjs\u002Fexpressjs.com\"\u003EExpress\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsenchalabs\u002Fconnect\"\u003EConnect\u003C\u002Fa\u003E or \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Flukeed\u002Fpolka\"\u003EPolka\u003C\u002Fa\u003E (or even just the built-in \u003Ca href=\"https:\u002F\u002Fnodejs.org\u002Fdist\u002Flatest\u002Fdocs\u002Fapi\u002Fhttp.html#httpcreateserveroptions-requestlistener\"\u003E\u003Ccode\u003Ehttp.createServer\u003C\u002Fcode\u003E\u003C\u002Fa\u003E) and set up your own server:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block\"\u003E\u003Cspan class=\"filename\"\u003Emy-server.js\u003C\u002Fspan\u003E\u003Cpre class=\"shiki twoslash lsp\" style=\"background-color: var(--shiki-color-background); color: var(--shiki-color-text)\"\u003E\u003Cdiv class=\"language-id\"\u003Ets\u003C\u002Fdiv\u003E\u003Cdiv class='code-container'\u003E\u003Ccode\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eimport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E { \u003Cdata-lsp lsp='import handler' \u003Ehandler\u003C\u002Fdata-lsp\u003E } \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Efrom\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E\u003Cdata-err\u003E&apos;.\u002Fbuild\u002Fhandler.js&apos;\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find module '.\u002Fbuild\u002Fhandler.js' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2307\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find module '.\u002Fbuild\u002Fhandler.js' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eimport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003Cdata-lsp lsp='import express' \u003Eexpress\u003C\u002Fdata-lsp\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Efrom\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E\u003Cdata-err\u003E&apos;express&apos;\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find module 'express' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2307\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find module 'express' or its corresponding type declarations.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-lsp lsp='const app: any' \u003Eapp\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E=\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E\u003Cdata-lsp lsp='import express' \u003Eexpress\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E();\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-comment)\"\u003E\u002F\u002F add a route that lives separately from the SvelteKit app\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-lsp lsp='const app: any' \u003Eapp\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Eget\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;\u002Fhealthcheck&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E (\u003Cdata-err\u003E\u003Cdata-lsp lsp='(parameter) req: any' \u003Ereq\u003C\u002Fdata-lsp\u003E\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003Cdata-err\u003E\u003Cdata-lsp lsp='(parameter) res: any' \u003Eres\u003C\u002Fdata-lsp\u003E\u003C\u002Fdata-err\u003E) \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E=&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003EParameter 'req' implicitly has an 'any' type.\u003C\u002Fbr\u003EParameter 'res' implicitly has an 'any' type.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E7006\u003Cbr\u002F\u003E7006\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003EParameter 'req' implicitly has an 'any' type.\u003C\u002Fbr\u003EParameter 'res' implicitly has an 'any' type.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-lsp lsp='(parameter) res: any' \u003Eres\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Eend\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;ok&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E});\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-comment)\"\u003E\u002F\u002F let SvelteKit handle everything else, including serving prerendered pages and static assets\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-lsp lsp='const app: any' \u003Eapp\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Euse\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003Cdata-lsp lsp='import handler' \u003Ehandler\u003C\u002Fdata-lsp\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-lsp lsp='const app: any' \u003Eapp\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Elisten\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E3000\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E () \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E=&gt;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-lsp lsp='var console: Console' \u003Econsole\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='(method) Console.log(...data: any[]): void' \u003Elog\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;listening on port 3000&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E});\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2 id=\"troubleshooting\"\u003ETroubleshooting\u003Ca href=\"#troubleshooting\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Ch3 id=\"troubleshooting-is-there-a-hook-for-cleaning-up-before-the-server-exits\"\u003EIs there a hook for cleaning up before the server exits?\u003Ca href=\"#troubleshooting-is-there-a-hook-for-cleaning-up-before-the-server-exits\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThere&#39;s nothing built-in to SvelteKit for this, because such a cleanup hook depends highly on the execution environment you&#39;re on. For Node, you can use its built-in \u003Ccode\u003Eprocess.on(..)\u003C\u002Fcode\u003E to implement a callback that runs before the server exits:\u003C\u002Fp\u003E\n\u003Cpre class=\"shiki twoslash lsp\" style=\"background-color: var(--shiki-color-background); color: var(--shiki-color-text)\"\u003E\u003Cdiv class=\"language-id\"\u003Ets\u003C\u002Fdiv\u003E\u003Cdiv class='code-container'\u003E\u003Ccode\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Efunction\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E\u003Cdata-lsp lsp='function shutdownGracefully(): void' \u003EshutdownGracefully\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E() {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-comment)\"\u003E\u002F\u002F anything you need to clean up manually goes in here\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-err\u003E\u003Cdata-lsp lsp='any' \u003Edb\u003C\u002Fdata-lsp\u003E\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Eshutdown\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E();\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find name 'db'.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2304\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find name 'db'.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-err\u003E\u003Cdata-lsp lsp='any' \u003Eprocess\u003C\u002Fdata-lsp\u003E\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Eon\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;SIGINT&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003Cdata-lsp lsp='function shutdownGracefully(): void' \u003EshutdownGracefully\u003C\u002Fdata-lsp\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find name 'process'. Do you need to install type definitions for node? Try `npm i --save-dev @types\u002Fnode`.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2580\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find name 'process'. Do you need to install type definitions for node? Try `npm i --save-dev @types\u002Fnode`.\u003C\u002Fspan\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-constant)\"\u003E\u003Cdata-err\u003E\u003Cdata-lsp lsp='any' \u003Eprocess\u003C\u002Fdata-lsp\u003E\u003C\u002Fdata-err\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E.\u003Cdata-lsp lsp='any' \u003Eon\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E(\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;SIGTERM&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-punctuation)\"\u003E,\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003Cdata-lsp lsp='function shutdownGracefully(): void' \u003EshutdownGracefully\u003C\u002Fdata-lsp\u003E);\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cspan class=\"error\"\u003E\u003Cspan\u003ECannot find name 'process'. Do you need to install type definitions for node? Try `npm i --save-dev @types\u002Fnode`.\u003C\u002Fspan\u003E\u003Cspan class=\"code\"\u003E2580\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"error-behind\"\u003ECannot find name 'process'. Do you need to install type definitions for node? Try `npm i --save-dev @types\u002Fnode`.\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fpre\u003E",[7,11,15,31,47,51],{"title":8,"slug":9,"sections":10},"Usage","usage",[],{"title":12,"slug":13,"sections":14},"Deploying","deploying",[],{"title":16,"slug":17,"sections":18},"Environment variables","environment-variables",[19,22,25,28],{"title":20,"slug":21},"PORT and HOST","environment-variables-port-and-host",{"title":23,"slug":24},"ORIGIN, PROTOCOL_HEADER and HOST_HEADER","environment-variables-origin-protocol-header-and-host-header",{"title":26,"slug":27},"ADDRESS_HEADER and XFF_DEPTH","environment-variables-address-header-and-xff-depth",{"title":29,"slug":30},"BODY_SIZE_LIMIT","environment-variables-body-size-limit",{"title":32,"slug":33,"sections":34},"Options","options",[35,38,41,44],{"title":36,"slug":37},"out","options-out",{"title":39,"slug":40},"precompress","options-precompress",{"title":42,"slug":43},"envPrefix","options-envprefix",{"title":45,"slug":46},"polyfill","options-polyfill",{"title":48,"slug":49,"sections":50},"Custom server","custom-server",[],{"title":52,"slug":53,"sections":54},"Troubleshooting","troubleshooting",[55],{"title":56,"slug":57},"Is there a hook for cleaning up before the server exits?","troubleshooting-is-there-a-hook-for-cleaning-up-before-the-server-exits"],"uses":{"params":["slug"]}}]}
