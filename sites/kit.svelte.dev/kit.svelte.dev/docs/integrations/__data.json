{"type":"data","nodes":[null,{"type":"data","data":[{"sections":1},[2,17,35,71,101,110,125],{"title":3,"pages":4},"Getting started",[5,8,11,14],{"title":6,"path":7},"Introduction","\u002Fdocs\u002Fintroduction",{"title":9,"path":10},"Creating a project","\u002Fdocs\u002Fcreating-a-project",{"title":12,"path":13},"Project structure","\u002Fdocs\u002Fproject-structure",{"title":15,"path":16},"Web standards","\u002Fdocs\u002Fweb-standards",{"title":18,"pages":19},"Core concepts",[20,23,26,29,32],{"title":21,"path":22},"Routing","\u002Fdocs\u002Frouting",{"title":24,"path":25},"Loading data","\u002Fdocs\u002Fload",{"title":27,"path":28},"Form actions","\u002Fdocs\u002Fform-actions",{"title":30,"path":31},"Page options","\u002Fdocs\u002Fpage-options",{"title":33,"path":34},"State management","\u002Fdocs\u002Fstate-management",{"title":36,"pages":37},"Build and deploy",[38,41,44,47,50,53,56,59,62,65,68],{"title":39,"path":40},"Building your app","\u002Fdocs\u002Fbuilding-your-app",{"title":42,"path":43},"Adapters","\u002Fdocs\u002Fadapters",{"title":45,"path":46},"Zero-config deployments","\u002Fdocs\u002Fadapter-auto",{"title":48,"path":49},"Node servers","\u002Fdocs\u002Fadapter-node",{"title":51,"path":52},"Static site generation","\u002Fdocs\u002Fadapter-static",{"title":54,"path":55},"Single-page apps","\u002Fdocs\u002Fsingle-page-apps",{"title":57,"path":58},"Cloudflare Pages","\u002Fdocs\u002Fadapter-cloudflare",{"title":60,"path":61},"Cloudflare Workers","\u002Fdocs\u002Fadapter-cloudflare-workers",{"title":63,"path":64},"Netlify","\u002Fdocs\u002Fadapter-netlify",{"title":66,"path":67},"Vercel","\u002Fdocs\u002Fadapter-vercel",{"title":69,"path":70},"Writing adapters","\u002Fdocs\u002Fwriting-adapters",{"title":72,"pages":73},"Advanced",[74,77,80,83,86,89,92,95,98],{"title":75,"path":76},"Advanced routing","\u002Fdocs\u002Fadvanced-routing",{"title":78,"path":79},"Hooks","\u002Fdocs\u002Fhooks",{"title":81,"path":82},"Errors","\u002Fdocs\u002Ferrors",{"title":84,"path":85},"Link options","\u002Fdocs\u002Flink-options",{"title":87,"path":88},"Service workers","\u002Fdocs\u002Fservice-workers",{"title":90,"path":91},"Server-only modules","\u002Fdocs\u002Fserver-only-modules",{"title":93,"path":94},"Asset handling","\u002Fdocs\u002Fassets",{"title":96,"path":97},"Snapshots","\u002Fdocs\u002Fsnapshots",{"title":99,"path":100},"Packaging","\u002Fdocs\u002Fpackaging",{"title":102,"pages":103},"Best practices",[104,107],{"title":105,"path":106},"Accessibility","\u002Fdocs\u002Faccessibility",{"title":108,"path":109},"SEO","\u002Fdocs\u002Fseo",{"title":111,"pages":112},"Reference",[113,116,119,122],{"title":114,"path":115},"Configuration","\u002Fdocs\u002Fconfiguration",{"title":117,"path":118},"Command Line Interface","\u002Fdocs\u002Fcli",{"title":120,"path":121},"Modules","\u002Fdocs\u002Fmodules",{"title":123,"path":124},"Types","\u002Fdocs\u002Ftypes",{"title":126,"pages":127},"Appendix",[128,131,134,137],{"title":129,"path":130},"Integrations","\u002Fdocs\u002Fintegrations",{"title":132,"path":133},"Migrating from Sapper","\u002Fdocs\u002Fmigrating",{"title":135,"path":136},"Additional resources","\u002Fdocs\u002Fadditional-resources",{"title":138,"path":139},"Glossary","\u002Fdocs\u002Fglossary"],"uses":{}},{"type":"data","data":[{"page":1},{"file":2,"slug":3,"title":4,"content":5,"sections":6},"docs\u002F60-appendix\u002F05-integrations.md","integrations","Integrations","\u003Ch2 id=\"preprocessors\"\u003EPreprocessors\u003Ca href=\"#preprocessors\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EPreprocessors transform your \u003Ccode\u003E.svelte\u003C\u002Fcode\u003E files before passing them to the compiler. For example, if your \u003Ccode\u003E.svelte\u003C\u002Fcode\u003E file uses TypeScript and PostCSS, it must first be transformed into JavaScript and CSS so that the Svelte compiler can handle it. There are many \u003Ca href=\"https:\u002F\u002Fsveltesociety.dev\u002Ftools#preprocessors\"\u003Eavailable preprocessors\u003C\u002Fa\u003E. The Svelte team maintains two official ones discussed below.\u003C\u002Fp\u003E\n\u003Ch3 id=\"preprocessors-vitepreprocess\"\u003E\u003Ccode\u003EvitePreprocess\u003C\u002Fcode\u003E\u003Ca href=\"#preprocessors-vitepreprocess\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Evite-plugin-svelte\u003C\u002Fcode\u003E offers a \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsveltejs\u002Fvite-plugin-svelte\u002Fblob\u002Fmain\u002Fdocs\u002Fpreprocess.md\"\u003E\u003Ccode\u003EvitePreprocess\u003C\u002Fcode\u003E\u003C\u002Fa\u003E feature which utilizes Vite for preprocessing. It is capable of handling the language flavors Vite handles: TypeScript, PostCSS, SCSS, Less, Stylus, and SugarSS. For convenience, it is re-exported from the \u003Ccode\u003E@sveltejs\u002Fkit\u002Fvite\u003C\u002Fcode\u003E package. If you set your project up with TypeScript it will be included by default:\u003C\u002Fp\u003E\n\u003Cpre class=\"shiki twoslash lsp\" style=\"background-color: var(--shiki-color-background); color: var(--shiki-color-text)\"\u003E\u003Cdiv class=\"language-id\"\u003Ets\u003C\u002Fdiv\u003E\u003Cdiv class='code-container'\u003E\u003Ccode\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-comment)\"\u003E\u002F\u002F svelte.config.js\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eimport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E { \u003Cdata-lsp lsp='(alias) function vitePreprocess(opts?: {&amp;#10;    script?: boolean;&amp;#10;    style?: boolean | InlineConfig | ResolvedConfig;&amp;#10;}): PreprocessorGroup&amp;#10;import vitePreprocess' \u003EvitePreprocess\u003C\u002Fdata-lsp\u003E } \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Efrom\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-string-expression)\"\u003E&apos;@sveltejs\u002Fkit\u002Fvite&apos;\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E&nbsp;\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Eexport\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E \u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003Edefault\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E {\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E  \u003Cdata-lsp lsp='(property) preprocess: PreprocessorGroup[]' \u003Epreprocess\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-keyword)\"\u003E:\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E [\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-token-function)\"\u003E\u003Cdata-lsp lsp='(alias) vitePreprocess(opts?: {&amp;#10;    script?: boolean | undefined;&amp;#10;    style?: boolean | InlineConfig | Readonly&amp;lt;Omit&amp;lt;UserConfig, \"plugins\" | \"assetsInclude\" | \"optimizeDeps\" | \"worker\"\u003E &amp;amp; {&amp;#10;        ...;&amp;#10;    } &amp;amp; PluginHookUtils\u003E | undefined;&amp;#10;} | undefined): PreprocessorGroup&amp;#10;import vitePreprocess' \u003EvitePreprocess\u003C\u002Fdata-lsp\u003E\u003C\u002Fspan\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E()]\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class='line'\u003E\u003Cspan style=\"color: var(--shiki-color-text)\"\u003E};\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"preprocessors-svelte-preprocess\"\u003E\u003Ccode\u003Esvelte-preprocess\u003C\u002Fcode\u003E\u003Ca href=\"#preprocessors-svelte-preprocess\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Esvelte-preprocess\u003C\u002Fcode\u003E has some additional functionality not found in \u003Ccode\u003EvitePreprocess\u003C\u002Fcode\u003E such as support for Pug, Babel, and global styles. However, \u003Ccode\u003EvitePreprocess\u003C\u002Fcode\u003E may be faster and require less configuration, so it is used by default. Note that CoffeeScript is \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsveltejs\u002Fkit\u002Fissues\u002F2920#issuecomment-996469815\"\u003Enot supported\u003C\u002Fa\u003E by SvelteKit.\u003C\u002Fp\u003E\n\u003Cp\u003EYou will need to install \u003Ccode\u003Esvelte-preprocess\u003C\u002Fcode\u003E with \u003Ccode\u003Enpm install --save-dev svelte-preprocess\u003C\u002Fcode\u003E and \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsveltejs\u002Fsvelte-preprocess\u002Fblob\u002Fmain\u002Fdocs\u002Fusage.md#with-svelte-config\"\u003Eadd it to your \u003Ccode\u003Esvelte.config.js\u003C\u002Fcode\u003E\u003C\u002Fa\u003E. After that, you will often need to \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsveltejs\u002Fsvelte-preprocess\u002Fblob\u002Fmain\u002Fdocs\u002Fgetting-started.md\"\u003Einstall the corresponding library\u003C\u002Fa\u003E such as \u003Ccode\u003Enpm install -D sass\u003C\u002Fcode\u003E or \u003Ccode\u003Enpm install -D less\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"adders\"\u003EAdders\u003Ca href=\"#adders\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fsveltesociety.dev\u002Ftemplates#adders\"\u003ESvelte Adders\u003C\u002Fa\u003E allow you to setup many different complex integrations like Tailwind, PostCSS, Storybook, Firebase, GraphQL, mdsvex, and more with a single command. Please see \u003Ca href=\"https:\u002F\u002Fsveltesociety.dev\u002F\"\u003Esveltesociety.dev\u003C\u002Fa\u003E for a full listing of templates, components, and tools available for use with Svelte and SvelteKit.\u003C\u002Fp\u003E\n\u003Ch2 id=\"integration-faqs\"\u003EIntegration FAQs\u003Ca href=\"#integration-faqs\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Cp\u003EThe SvelteKit FAQ has a \u003Ca href=\"\u002Ffaq#integrations\"\u003Esection on integrations\u003C\u002Fa\u003E, which may be helpful if you still have questions.\u003C\u002Fp\u003E\n",[7,17,21],{"title":8,"slug":9,"sections":10},"Preprocessors","preprocessors",[11,14],{"title":12,"slug":13},"vitePreprocess","preprocessors-vitepreprocess",{"title":15,"slug":16},"svelte-preprocess","preprocessors-svelte-preprocess",{"title":18,"slug":19,"sections":20},"Adders","adders",[],{"title":22,"slug":23,"sections":24},"Integration FAQs","integration-faqs",[]],"uses":{"params":["slug"]}}]}
