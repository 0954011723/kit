{"type":"data","nodes":[null,{"type":"data","data":[{"sections":1},[2,17,35,71,101,110,125],{"title":3,"pages":4},"Getting started",[5,8,11,14],{"title":6,"path":7},"Introduction","\u002Fdocs\u002Fintroduction",{"title":9,"path":10},"Creating a project","\u002Fdocs\u002Fcreating-a-project",{"title":12,"path":13},"Project structure","\u002Fdocs\u002Fproject-structure",{"title":15,"path":16},"Web standards","\u002Fdocs\u002Fweb-standards",{"title":18,"pages":19},"Core concepts",[20,23,26,29,32],{"title":21,"path":22},"Routing","\u002Fdocs\u002Frouting",{"title":24,"path":25},"Loading data","\u002Fdocs\u002Fload",{"title":27,"path":28},"Form actions","\u002Fdocs\u002Fform-actions",{"title":30,"path":31},"Page options","\u002Fdocs\u002Fpage-options",{"title":33,"path":34},"State management","\u002Fdocs\u002Fstate-management",{"title":36,"pages":37},"Build and deploy",[38,41,44,47,50,53,56,59,62,65,68],{"title":39,"path":40},"Building your app","\u002Fdocs\u002Fbuilding-your-app",{"title":42,"path":43},"Adapters","\u002Fdocs\u002Fadapters",{"title":45,"path":46},"Zero-config deployments","\u002Fdocs\u002Fadapter-auto",{"title":48,"path":49},"Node servers","\u002Fdocs\u002Fadapter-node",{"title":51,"path":52},"Static site generation","\u002Fdocs\u002Fadapter-static",{"title":54,"path":55},"Single-page apps","\u002Fdocs\u002Fsingle-page-apps",{"title":57,"path":58},"Cloudflare Pages","\u002Fdocs\u002Fadapter-cloudflare",{"title":60,"path":61},"Cloudflare Workers","\u002Fdocs\u002Fadapter-cloudflare-workers",{"title":63,"path":64},"Netlify","\u002Fdocs\u002Fadapter-netlify",{"title":66,"path":67},"Vercel","\u002Fdocs\u002Fadapter-vercel",{"title":69,"path":70},"Writing adapters","\u002Fdocs\u002Fwriting-adapters",{"title":72,"pages":73},"Advanced",[74,77,80,83,86,89,92,95,98],{"title":75,"path":76},"Advanced routing","\u002Fdocs\u002Fadvanced-routing",{"title":78,"path":79},"Hooks","\u002Fdocs\u002Fhooks",{"title":81,"path":82},"Errors","\u002Fdocs\u002Ferrors",{"title":84,"path":85},"Link options","\u002Fdocs\u002Flink-options",{"title":87,"path":88},"Service workers","\u002Fdocs\u002Fservice-workers",{"title":90,"path":91},"Server-only modules","\u002Fdocs\u002Fserver-only-modules",{"title":93,"path":94},"Asset handling","\u002Fdocs\u002Fassets",{"title":96,"path":97},"Snapshots","\u002Fdocs\u002Fsnapshots",{"title":99,"path":100},"Packaging","\u002Fdocs\u002Fpackaging",{"title":102,"pages":103},"Best practices",[104,107],{"title":105,"path":106},"Accessibility","\u002Fdocs\u002Faccessibility",{"title":108,"path":109},"SEO","\u002Fdocs\u002Fseo",{"title":111,"pages":112},"Reference",[113,116,119,122],{"title":114,"path":115},"Configuration","\u002Fdocs\u002Fconfiguration",{"title":117,"path":118},"Command Line Interface","\u002Fdocs\u002Fcli",{"title":120,"path":121},"Modules","\u002Fdocs\u002Fmodules",{"title":123,"path":124},"Types","\u002Fdocs\u002Ftypes",{"title":126,"pages":127},"Appendix",[128,131,134,137],{"title":129,"path":130},"Integrations","\u002Fdocs\u002Fintegrations",{"title":132,"path":133},"Migrating from Sapper","\u002Fdocs\u002Fmigrating",{"title":135,"path":136},"Additional resources","\u002Fdocs\u002Fadditional-resources",{"title":138,"path":139},"Glossary","\u002Fdocs\u002Fglossary"],"uses":{}},{"type":"data","data":[{"page":1},{"file":2,"slug":3,"title":4,"content":5,"sections":6},"docs\u002F10-getting-started\u002F30-project-structure.md","project-structure","Project structure","\u003Cp\u003EA typical SvelteKit project looks like this:\u003C\u002Fp\u003E\n\u003Cpre class='language-bash'\u003E\u003Ccode\u003Emy-project\u002F\n├ src\u002F\n│ ├ lib\u002F\n│ │ ├ server\u002F\n│ │ │ └ \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Eyour server-only lib files\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n│ │ └ \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Eyour lib files\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n│ ├ params\u002F\n│ │ └ \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Eyour param matchers\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n│ ├ routes\u002F\n│ │ └ \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Eyour routes\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n│ ├ app.html\n│ ├ error.html\n│ ├ hooks.client.js\n│ └ hooks.server.js\n├ static\u002F\n│ └ \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Eyour static assets\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n├ tests\u002F\n│ └ \u003Cspan class=\"token punctuation\"\u003E[\u003C\u002Fspan\u003Eyour tests\u003Cspan class=\"token punctuation\"\u003E]\u003C\u002Fspan\u003E\n├ package.json\n├ svelte.config.js\n├ tsconfig.json\n└ vite.config.js\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou&#39;ll also find common files like \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E and \u003Ccode\u003E.npmrc\u003C\u002Fcode\u003E (and \u003Ccode\u003E.prettierrc\u003C\u002Fcode\u003E and \u003Ccode\u003E.eslintrc.cjs\u003C\u002Fcode\u003E and so on, if you chose those options when running \u003Ccode\u003Enpm create svelte@latest\u003C\u002Fcode\u003E).\u003C\u002Fp\u003E\n\u003Ch2 id=\"project-files\"\u003EProject files\u003Ca href=\"#project-files\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Ch3 id=\"project-files-src\"\u003Esrc\u003Ca href=\"#project-files-src\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThe \u003Ccode\u003Esrc\u003C\u002Fcode\u003E directory contains the meat of your project. Everything except \u003Ccode\u003Esrc\u002Froutes\u003C\u002Fcode\u003E and \u003Ccode\u003Esrc\u002Fapp.html\u003C\u002Fcode\u003E is optional.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Elib\u003C\u002Fcode\u003E contains your library code (utilities and components), which can be imported via the \u003Ca href=\"modules#$lib\"\u003E\u003Ccode\u003E$lib\u003C\u002Fcode\u003E\u003C\u002Fa\u003E alias, or packaged up for distribution using \u003Ca href=\"packaging\"\u003E\u003Ccode\u003Esvelte-package\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eserver\u003C\u002Fcode\u003E contains your server-only library code. It can be imported by using the \u003Ca href=\"server-only-modules\"\u003E\u003Ccode\u003E$lib\u002Fserver\u003C\u002Fcode\u003E\u003C\u002Fa\u003E alias. SvelteKit will prevent you from importing these in client code.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eparams\u003C\u002Fcode\u003E contains any \u003Ca href=\"advanced-routing#matching\"\u003Eparam matchers\u003C\u002Fa\u003E your app needs\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eroutes\u003C\u002Fcode\u003E contains the \u003Ca href=\"routing\"\u003Eroutes\u003C\u002Fa\u003E of your application. You can also colocate other components that are only used within a single route here\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eapp.html\u003C\u002Fcode\u003E is your page template — an HTML document containing the following placeholders:\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.head%\u003C\u002Fcode\u003E — \u003Ccode\u003E&lt;link&gt;\u003C\u002Fcode\u003E and \u003Ccode\u003E&lt;script&gt;\u003C\u002Fcode\u003E elements needed by the app, plus any \u003Ccode\u003E&lt;svelte:head&gt;\u003C\u002Fcode\u003E content\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.body%\u003C\u002Fcode\u003E — the markup for a rendered page. This should live inside a \u003Ccode\u003E&lt;div&gt;\u003C\u002Fcode\u003E or other element, rather than directly inside \u003Ccode\u003E&lt;body&gt;\u003C\u002Fcode\u003E, to prevent bugs caused by browser extensions injecting elements that are then destroyed by the hydration process. SvelteKit will warn you in development if this is not the case\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.assets%\u003C\u002Fcode\u003E — either \u003Ca href=\"configuration#paths\"\u003E\u003Ccode\u003Epaths.assets\u003C\u002Fcode\u003E\u003C\u002Fa\u003E, if specified, or a relative path to \u003Ca href=\"configuration#paths\"\u003E\u003Ccode\u003Epaths.base\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.nonce%\u003C\u002Fcode\u003E — a \u003Ca href=\"configuration#csp\"\u003ECSP\u003C\u002Fa\u003E nonce for manually included links and scripts, if used\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.env.[NAME]%\u003C\u002Fcode\u003E - this will be replaced at render time with the \u003Ccode\u003E[NAME]\u003C\u002Fcode\u003E environment variable, which must begin with the \u003Ca href=\"https:\u002F\u002Fkit.svelte.dev\u002Fdocs\u002Fconfiguration#env\"\u003E\u003Ccode\u003EpublicPrefix\u003C\u002Fcode\u003E\u003C\u002Fa\u003E (usually \u003Ccode\u003EPUBLIC_\u003C\u002Fcode\u003E). It will fallback to \u003Ccode\u003E&#39;&#39;\u003C\u002Fcode\u003E if not matched.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eerror.html\u003C\u002Fcode\u003E is the page that is rendered when everything else fails. It can contain the following placeholders:\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.status%\u003C\u002Fcode\u003E — the HTTP status\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E%sveltekit.error.message%\u003C\u002Fcode\u003E — the error message\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ehooks.client.js\u003C\u002Fcode\u003E contains your client \u003Ca href=\"\u002Fdocs\u002Fhooks\"\u003Ehooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ehooks.server.js\u003C\u002Fcode\u003E contains your server \u003Ca href=\"\u002Fdocs\u002Fhooks\"\u003Ehooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eservice-worker.js\u003C\u002Fcode\u003E contains your \u003Ca href=\"\u002Fdocs\u002Fservice-workers\"\u003Eservice worker\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EYou can use \u003Ccode\u003E.ts\u003C\u002Fcode\u003E files instead of \u003Ccode\u003E.js\u003C\u002Fcode\u003E files, if using TypeScript.\u003C\u002Fp\u003E\n\u003Cp\u003EIf you added \u003Ca href=\"https:\u002F\u002Fvitest.dev\"\u003EVitest\u003C\u002Fa\u003E when you set up your project, your unit tests will live in the \u003Ccode\u003Esrc\u003C\u002Fcode\u003E directory with a \u003Ccode\u003E.test.js\u003C\u002Fcode\u003E (or \u003Ccode\u003E.test.ts\u003C\u002Fcode\u003E) extension.\u003C\u002Fp\u003E\n\u003Ch3 id=\"project-files-static\"\u003Estatic\u003Ca href=\"#project-files-static\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EAny static assets that should be served as-is, like \u003Ccode\u003Erobots.txt\u003C\u002Fcode\u003E or \u003Ccode\u003Efavicon.png\u003C\u002Fcode\u003E, go in here.\u003C\u002Fp\u003E\n\u003Ch3 id=\"project-files-tests\"\u003Etests\u003Ca href=\"#project-files-tests\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIf you added \u003Ca href=\"https:\u002F\u002Fplaywright.dev\u002F\"\u003EPlaywright\u003C\u002Fa\u003E for browser testing when you set up your project, the tests will live in this directory.\u003C\u002Fp\u003E\n\u003Ch3 id=\"project-files-package-json\"\u003Epackage.json\u003Ca href=\"#project-files-package-json\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EYour \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E file must include \u003Ccode\u003E@sveltejs\u002Fkit\u003C\u002Fcode\u003E, \u003Ccode\u003Esvelte\u003C\u002Fcode\u003E and \u003Ccode\u003Evite\u003C\u002Fcode\u003E as \u003Ccode\u003EdevDependencies\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EWhen you create a project with \u003Ccode\u003Enpm create svelte@latest\u003C\u002Fcode\u003E, you&#39;ll also notice that \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E includes \u003Ccode\u003E&quot;type&quot;: &quot;module&quot;\u003C\u002Fcode\u003E. This means that \u003Ccode\u003E.js\u003C\u002Fcode\u003E files are interpreted as native JavaScript modules with \u003Ccode\u003Eimport\u003C\u002Fcode\u003E and \u003Ccode\u003Eexport\u003C\u002Fcode\u003E keywords. Legacy CommonJS files need a \u003Ccode\u003E.cjs\u003C\u002Fcode\u003E file extension.\u003C\u002Fp\u003E\n\u003Ch3 id=\"project-files-svelte-config-js\"\u003Esvelte.config.js\u003Ca href=\"#project-files-svelte-config-js\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThis file contains your Svelte and SvelteKit \u003Ca href=\"configuration\"\u003Econfiguration\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"project-files-tsconfig-json\"\u003Etsconfig.json\u003Ca href=\"#project-files-tsconfig-json\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EThis file (or \u003Ccode\u003Ejsconfig.json\u003C\u002Fcode\u003E, if you prefer type-checked \u003Ccode\u003E.js\u003C\u002Fcode\u003E files over \u003Ccode\u003E.ts\u003C\u002Fcode\u003E files) configures TypeScript, if you added typechecking during \u003Ccode\u003Enpm create svelte@latest\u003C\u002Fcode\u003E. Since SvelteKit relies on certain configuration being set a specific way, it generates its own \u003Ccode\u003E.svelte-kit\u002Ftsconfig.json\u003C\u002Fcode\u003E file which your own config \u003Ccode\u003Eextends\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"project-files-vite-config-js\"\u003Evite.config.js\u003Ca href=\"#project-files-vite-config-js\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EA SvelteKit project is really just a \u003Ca href=\"https:\u002F\u002Fvitejs.dev\"\u003EVite\u003C\u002Fa\u003E project that uses the \u003Ca href=\"modules#sveltejs-kit-vite\"\u003E\u003Ccode\u003E@sveltejs\u002Fkit\u002Fvite\u003C\u002Fcode\u003E\u003C\u002Fa\u003E plugin, along with any other \u003Ca href=\"https:\u002F\u002Fvitejs.dev\u002Fconfig\u002F\"\u003EVite configuration\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"other-files\"\u003EOther files\u003Ca href=\"#other-files\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\u003Ch3 id=\"other-files-svelte-kit\"\u003E.svelte-kit\u003Ca href=\"#other-files-svelte-kit\" class=\"permalink\"\u003E\u003Cspan class=\"visually-hidden\"\u003Epermalink\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fh3\u003E\u003Cp\u003EAs you develop and build your project, SvelteKit will generate files in a \u003Ccode\u003E.svelte-kit\u003C\u002Fcode\u003E directory (configurable as \u003Ca href=\"configuration#outdir\"\u003E\u003Ccode\u003EoutDir\u003C\u002Fcode\u003E\u003C\u002Fa\u003E). You can ignore its contents, and delete them at any time (they will be regenerated when you next \u003Ccode\u003Edev\u003C\u002Fcode\u003E or \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E).\u003C\u002Fp\u003E\n",[7,32],{"title":8,"slug":9,"sections":10},"Project files","project-files",[11,14,17,20,23,26,29],{"title":12,"slug":13},"src","project-files-src",{"title":15,"slug":16},"static","project-files-static",{"title":18,"slug":19},"tests","project-files-tests",{"title":21,"slug":22},"package.json","project-files-package-json",{"title":24,"slug":25},"svelte.config.js","project-files-svelte-config-js",{"title":27,"slug":28},"tsconfig.json","project-files-tsconfig-json",{"title":30,"slug":31},"vite.config.js","project-files-vite-config-js",{"title":33,"slug":34,"sections":35},"Other files","other-files",[36],{"title":37,"slug":38},".svelte-kit","other-files-svelte-kit"],"uses":{"params":["slug"]}}]}
